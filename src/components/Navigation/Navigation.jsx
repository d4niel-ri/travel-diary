/* eslint-disable react-hooks/rules-of-hooks */
import { useState, useEffect } from "react";
import styles from "./styles.module.scss";
import { Button } from "@mui/material";
import Login from "../Login/Login";
import Register from "../Register/Register";
import { useDispatch, useSelector } from "react-redux";
import ListItemIcon from '@mui/material/ListItemIcon';
import Divider from '@mui/material/Divider';
import Menu from '@mui/material/Menu';
import MenuItem from '@mui/material/MenuItem';
import Logout from '@mui/icons-material/Logout';
import { useGetValFromLocal } from "../../hooks/localStorage";
import { setUser, userLogout } from "../../App/actions";
import { useNavigate } from "react-router-dom";

const Navigation = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const [isOpenLogin, setIsOpenLogin] = useState(false);
  const [isOpenRegister, setIsOpenRegister] = useState(false);
  const user = useSelector((state) => state.appReducer.user);

  const navigateToHomePage = () => navigate("/");

  const [anchorProfile, setAnchorProfile] = useState(null);
  const openDropdownProfile = Boolean(anchorProfile);

  const handleClickProfile = (event) => {
    setAnchorProfile(event.currentTarget);
  };
  const handleCloseDropdown = () => {
    setAnchorProfile(null);
  };

  const handleClickOpenLogin = () => {
    setIsOpenLogin(true);
  };

  useEffect(() => {
    const userDataFromLocalStorage = useGetValFromLocal("user", null);
    if (userDataFromLocalStorage) dispatch(setUser(userDataFromLocalStorage));
  }, []);

  return (
    <>
      {user ? (
        <nav>
          <div className={styles.app_name} onClick={navigateToHomePage}>
            <h2>The Journey</h2>
            <img src="./TitleIcon.png" alt="Title Icons" />
          </div>

          <div className={styles.profile} onClick={handleClickProfile}>
            <img src="/Profile.png" alt={user.fullName} />
          </div>

          <Menu
            anchorEl={anchorProfile}
            id="account-menu"
            open={openDropdownProfile}
            onClose={handleCloseDropdown}
            onClick={handleCloseDropdown}
            PaperProps={{
              elevation: 0,
              sx: {
                overflow: 'visible',
                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',
                mt: 1.5,
                '& .MuiAvatar-root': {
                  width: 32,
                  height: 32,
                  ml: -0.5,
                  mr: 1,
                },
                '&:before': {
                  content: '""',
                  display: 'block',
                  position: 'absolute',
                  top: 0,
                  right: 20,
                  width: 10,
                  height: 10,
                  bgcolor: 'background.paper',
                  transform: 'translateY(-50%) rotate(45deg)',
                  zIndex: 0,
                },
              },
            }}
            transformOrigin={{ horizontal: 'right', vertical: 'top' }}
            anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}
          >
            <MenuItem onClick={() => navigate("/profile")}>
              <ListItemIcon>
                <svg width="20" height="20" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_1_1176)">
                    <path d="M14.7862 14.4511C16.7715 14.4511 18.4904 13.7391 19.8953 12.3342C21.2997 10.9296 22.012 9.21089 22.012 7.22534C22.012 5.24048 21.3 3.52158 19.8951 2.11647C18.4902 0.712051 16.7713 0 14.7862 0C12.8007 0 11.082 0.712051 9.67735 2.1167C8.27271 3.52135 7.56042 5.24025 7.56042 7.22534C7.56042 9.21089 8.27271 10.9298 9.67735 12.3344C11.0825 13.7389 12.8014 14.4511 14.7862 14.4511ZM10.9206 3.35976C11.9984 2.28195 13.2628 1.75804 14.7862 1.75804C16.3094 1.75804 17.574 2.28195 18.652 3.35976C19.7298 4.43779 20.254 5.70236 20.254 7.22534C20.254 8.74878 19.7298 10.0131 18.652 11.0912C17.574 12.1692 16.3094 12.6931 14.7862 12.6931C13.2632 12.6931 11.9989 12.169 10.9206 11.0912C9.84261 10.0134 9.31847 8.74878 9.31847 7.22534C9.31847 5.70236 9.84261 4.43779 10.9206 3.35976Z" fill="#FFAF00"/>
                    <path d="M27.4294 23.0686C27.3889 22.484 27.307 21.8463 27.1864 21.173C27.0646 20.4946 26.9078 19.8532 26.7201 19.2671C26.526 18.6612 26.2626 18.0629 25.9364 17.4896C25.5984 16.8945 25.201 16.3763 24.7552 15.9499C24.2889 15.5038 23.7181 15.1451 23.058 14.8835C22.4002 14.6233 21.6712 14.4914 20.8914 14.4914C20.5852 14.4914 20.289 14.6171 19.717 14.9895C19.365 15.2191 18.9532 15.4846 18.4937 15.7782C18.1007 16.0286 17.5683 16.2632 16.9107 16.4756C16.2691 16.6832 15.6178 16.7885 14.9746 16.7885C14.3319 16.7885 13.6805 16.6832 13.0385 16.4756C12.3816 16.2634 11.849 16.0288 11.4567 15.7784C11.0014 15.4875 10.5894 15.222 10.2322 14.9893C9.66064 14.6169 9.36447 14.4912 9.05823 14.4912C8.2782 14.4912 7.54944 14.6233 6.89186 14.8837C6.23222 15.1449 5.66116 15.5036 5.19447 15.9501C4.74861 16.3767 4.35127 16.8947 4.01344 17.4896C3.68774 18.0629 3.42407 18.661 3.22998 19.2673C3.04253 19.8535 2.88574 20.4946 2.76398 21.173C2.64313 21.8454 2.56142 22.4833 2.5209 23.0692C2.48108 23.6421 2.46094 24.2384 2.46094 24.8408C2.46094 26.4068 2.95876 27.6746 3.94043 28.6096C4.90997 29.5322 6.19263 30 7.75291 30H22.1981C23.7579 30 25.0406 29.5322 26.0104 28.6096C26.9923 27.6753 27.4901 26.407 27.4901 24.8406C27.4899 24.2361 27.4695 23.6398 27.4294 23.0686ZM24.7982 27.3358C24.1576 27.9456 23.307 28.242 22.1979 28.242H7.75291C6.64352 28.242 5.793 27.9456 5.15259 27.3361C4.52431 26.738 4.21898 25.9216 4.21898 24.8408C4.21898 24.2787 4.23752 23.7236 4.2746 23.1908C4.31076 22.668 4.38469 22.0937 4.49432 21.4836C4.60258 20.8809 4.74037 20.3153 4.90425 19.8033C5.06149 19.3124 5.27596 18.8262 5.54192 18.3579C5.79575 17.9116 6.0878 17.5287 6.41006 17.2202C6.7115 16.9315 7.09145 16.6953 7.53914 16.5182C7.95319 16.3543 8.4185 16.2646 8.92365 16.2511C8.98521 16.2838 9.09485 16.3463 9.27246 16.4621C9.63387 16.6976 10.0504 16.9663 10.5109 17.2605C11.03 17.5914 11.6988 17.8903 12.4979 18.1483C13.3147 18.4124 14.1479 18.5465 14.9748 18.5465C15.8018 18.5465 16.6351 18.4124 17.4516 18.1485C18.2513 17.8901 18.9198 17.5914 19.4396 17.26C19.9109 16.9588 20.3158 16.6979 20.6772 16.4621C20.8548 16.3465 20.9644 16.2838 21.026 16.2511C21.5314 16.2646 21.9967 16.3543 22.411 16.5182C22.8584 16.6953 23.2384 16.9318 23.5398 17.2202C23.8621 17.5285 24.1541 17.9114 24.408 18.3582C24.6741 18.8262 24.8888 19.3126 25.0459 19.8031C25.21 20.3158 25.348 20.8811 25.456 21.4833C25.5654 22.0947 25.6396 22.6692 25.6757 23.191V23.1915C25.713 23.7222 25.7318 24.2771 25.732 24.8408C25.7318 25.9218 25.4265 26.738 24.7982 27.3358Z" fill="#FFAF00"/>
                  </g>
                  <defs>
                    <clipPath id="clip0_1_1176">
                      <rect width="30" height="30" fill="white"/>
                    </clipPath>
                  </defs>
                </svg>
              </ListItemIcon>
              Profile
            </MenuItem>
            <MenuItem onClick={() => navigate("/newJourney")}>
              <ListItemIcon>
                <svg width="20" height="20" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M28.5789 1.1311C28.4873 1.10746 28.3904 1.11609 28.3044 1.15553C28.2185 1.19497 28.1487 1.26283 28.1069 1.34767C28.0694 1.42454 27.1415 3.24892 23.077 5.39532C23.0208 5.41984 22.9709 5.45664 22.9309 5.503C22.8908 5.54936 22.8617 5.60411 22.8456 5.66321C22.5917 6.61437 22.2473 7.53905 21.8172 8.42462C21.5799 7.91056 21.4209 7.36388 21.3454 6.80275C21.3365 6.74054 21.3133 6.68122 21.2778 6.62936C21.2423 6.57751 21.1954 6.53451 21.1406 6.50368C21.0858 6.47286 21.0247 6.45503 20.962 6.45157C20.8992 6.44812 20.8365 6.45913 20.7787 6.48376C19.7043 6.9415 18.535 7.37743 17.3031 7.77915C15.6698 8.30117 14.0937 8.98806 12.5995 9.82923C12.513 9.87882 12.4476 9.95823 12.4155 10.0526C12.2302 10.5963 12.03 11.1099 11.815 11.5934C11.8239 11.4321 11.8358 11.2607 11.8506 11.0792C11.8571 11.0017 11.8413 10.9239 11.8053 10.855C11.7692 10.7862 11.7143 10.7289 11.647 10.69C11.5797 10.6512 11.5027 10.6322 11.425 10.6354C11.3473 10.6386 11.2721 10.6638 11.2082 10.7081C7.04126 13.5938 4.77064 17.6665 4.0654 23.5102C2.99775 24.627 2.0599 25.861 1.26978 27.1887C1.12219 27.4395 1.07595 27.7371 1.14051 28.0209C1.20507 28.3046 1.37556 28.5529 1.61712 28.7152C1.79561 28.8302 2.00339 28.8914 2.21571 28.8917H20.9657C21.0745 28.8917 21.1788 28.8484 21.2557 28.7715C21.3327 28.6946 21.3759 28.5903 21.3759 28.4815C21.3759 28.3727 21.3327 28.2684 21.2557 28.1915C21.1788 28.1146 21.0745 28.0713 20.9657 28.0713H3.34329C4.05546 26.9243 4.88876 25.8571 5.82884 24.8881C9.87204 24.6898 19.2475 23.8732 22.9321 20.5418C23.1995 20.2998 23.4539 20.0437 23.6941 19.7747C23.7422 19.7211 23.7754 19.6558 23.7903 19.5853C23.8051 19.5148 23.8012 19.4417 23.7788 19.3732C23.7564 19.3047 23.7164 19.2434 23.6628 19.1953C23.6091 19.1472 23.5438 19.114 23.4733 19.0992C23.3854 19.0809 23.2985 19.0617 23.212 19.0423C23.5035 19.001 23.8312 18.9619 24.1924 18.9295C24.2523 18.924 24.3103 18.9054 24.3623 18.8751C24.4143 18.8447 24.459 18.8033 24.4933 18.7538C27.4884 14.4075 28.3504 11.0311 28.8848 1.55064C28.89 1.45616 28.8624 1.36278 28.8067 1.28632C28.7509 1.20986 28.6705 1.15502 28.5789 1.1311ZM1.97829 27.6019C4.53298 23.2191 9.26032 19.8884 14.2649 16.3627C15.3121 15.6251 16.4999 14.7891 17.6383 13.9531C17.6887 13.9157 17.7497 13.8955 17.8124 13.8954C17.8281 13.8954 17.8438 13.8967 17.8593 13.8992C17.8972 13.905 17.9336 13.9184 17.9663 13.9385C17.999 13.9586 18.0273 13.9851 18.0496 14.0163C18.0952 14.079 18.1142 14.1571 18.1025 14.2336C18.0908 14.3102 18.0494 14.3791 17.9873 14.4253C16.8438 15.2627 15.6529 16.1016 14.6015 16.8417C9.64142 20.3363 4.95626 23.637 2.46696 27.926C2.44718 27.9602 2.42066 27.9899 2.38901 28.0135C2.35737 28.037 2.32126 28.0539 2.28288 28.063C2.24451 28.0722 2.20467 28.0734 2.16581 28.0666C2.12694 28.0599 2.08985 28.0453 2.05681 28.0238C1.99337 27.976 1.95013 27.9062 1.9356 27.8281C1.92107 27.75 1.9363 27.6693 1.97829 27.6019ZM23.9256 18.1306C23.0574 18.2028 22.1972 18.3519 21.3552 18.5759C21.2726 18.6009 21.2 18.6513 21.1478 18.72C21.0955 18.7887 21.0662 18.8721 21.064 18.9584C21.0619 19.0447 21.087 19.1294 21.1358 19.2006C21.1846 19.2718 21.2545 19.3258 21.3358 19.3549C21.7305 19.4956 22.1512 19.6235 22.5927 19.7365C22.5224 19.8038 22.4533 19.8689 22.3818 19.9327C19.0977 22.902 10.5428 23.7729 6.69321 24.0176C9.06321 21.7481 12.0156 19.6676 15.0749 17.5125C16.1296 16.7702 17.3226 15.9291 18.4713 15.0865C18.7077 14.9117 18.8656 14.6507 18.9108 14.3602C18.9559 14.0696 18.8846 13.773 18.7124 13.5347C18.6263 13.4159 18.5176 13.3154 18.3924 13.2388C18.2673 13.1623 18.1283 13.1113 17.9833 13.0887C17.8384 13.0661 17.6904 13.0725 17.5479 13.1073C17.4054 13.1422 17.2713 13.2049 17.1531 13.2919C16.0202 14.123 14.8366 14.9559 13.7924 15.6924C10.6087 17.9353 7.53603 20.1005 5.03431 22.5213C5.7972 17.8292 7.70806 14.4087 10.9799 11.8901C10.9564 12.3683 10.9626 12.8475 10.9984 13.3249C11.0071 13.4108 11.0425 13.4917 11.0998 13.5562C11.1571 13.6208 11.2332 13.6656 11.3174 13.6843C11.4017 13.7031 11.4896 13.6948 11.5689 13.6606C11.6481 13.6265 11.7146 13.5682 11.7588 13.4942C12.3197 12.5332 12.7829 11.5184 13.1416 10.4651C14.5482 9.68715 16.0276 9.0488 17.5586 8.55915C18.6344 8.20759 19.6642 7.83118 20.6273 7.4365C20.9249 8.80337 21.5006 9.49314 21.528 9.52501C21.5707 9.57525 21.625 9.61443 21.6861 9.63923C21.7472 9.66404 21.8134 9.67374 21.8791 9.6675C21.9448 9.66127 22.008 9.63929 22.0633 9.60343C22.1187 9.56756 22.1646 9.51888 22.1971 9.4615C22.7958 8.38471 23.2633 7.24007 23.5895 6.05204C25.8972 4.81782 27.2355 3.67032 27.9848 2.8622C27.4598 11.0236 26.586 14.2207 23.9256 18.1306Z" fill="#87A900"/>
                  <path d="M26.3127 9.38444C26.2597 9.37478 26.2052 9.37568 26.1526 9.38709C26.0999 9.39851 26.0499 9.42021 26.0057 9.45095C25.9614 9.4817 25.9236 9.52088 25.8945 9.56626C25.8654 9.61163 25.8455 9.66231 25.836 9.71538C25.7242 10.3372 25.6016 10.9044 25.4643 11.4498C25.4376 11.5552 25.454 11.6669 25.5096 11.7603C25.5653 11.8538 25.6558 11.9213 25.7612 11.948C25.7942 11.9564 25.8282 11.9606 25.8622 11.9605C25.9534 11.9604 26.042 11.9299 26.1139 11.8739C26.1859 11.8179 26.2371 11.7395 26.2595 11.6511C26.4022 11.0886 26.5281 10.5026 26.6436 9.86116C26.663 9.75406 26.639 9.64367 26.5769 9.55427C26.5148 9.46487 26.4198 9.40378 26.3127 9.38444Z" fill="#87A900"/>
                </svg>
              </ListItemIcon>
              New Journey
            </MenuItem>
            <MenuItem onClick={() => navigate("/bookmark")}>
              <ListItemIcon>
                <svg width="20" height="20" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M6.21094 0V30L15 21.4981L23.7891 30V0H6.21094ZM22.0312 25.8717L15 19.0488L7.96875 25.8717V1.75781H22.0312V25.8717Z" fill="#3B97D3"/>
                </svg>
              </ListItemIcon>
              Bookmark
            </MenuItem>
            <Divider />
            <MenuItem onClick={() => dispatch(userLogout(navigateToHomePage))}>
              <ListItemIcon>
                <Logout fontSize="small" className={styles.logout_icon} />
              </ListItemIcon>
              Logout
            </MenuItem>
          </Menu>
        </nav>
      ) : (
        <header>
          <img src="/Phuket.png" alt="Five developers at work" />
          <div className={styles.subheader}>
            <nav>
              <div className={styles.app_name}>
                <h2>The Journey</h2>
                <img src="./TitleIcon.png" alt="Title Icons" />
              </div>

              <div className={styles.buttons}>
                <Button variant="outlined" className={`${styles.btn} ${styles.login}`}
                  onClick={handleClickOpenLogin}
                >
                  Login
                </Button>
                <Button variant="contained" className={`${styles.btn} ${styles.register}`}
                  onClick={() => setIsOpenRegister(true)}
                >
                  Register
                </Button>
              </div>
            </nav>

            <div className={styles.subheader_desc}>
              <h1>The Journey<br/>you ever dreamed of.</h1>
              <h3>
                We made a tool so you can easily keep & share your travel memories.<br/>
                But there is a lot more
              </h3>
            </div>
          </div>
        </header>
      )}

      {isOpenLogin && (
        <Login isOpenLogin={isOpenLogin} setIsOpenLogin={setIsOpenLogin} setIsOpenRegister={setIsOpenRegister} />
      )}

      {isOpenRegister && (
        <Register isOpenRegister={isOpenRegister} setIsOpenRegister={setIsOpenRegister} />
      )}
    </>
  )
}

export default Navigation;